
def main(){ // trueSkill
    skillA := Gauss(100,10);
    skillB := Gauss(100,10);
    skillC := Gauss(100,10);

    // first game:A vs B, A won
    perfA1 := Gauss(skillA,15);
    perfB1 := Gauss(skillB,15);
    observe(perfA1 > perfB1);

    // second game:B vs C, B won
    perfB2 := Gauss(skillB,15);
    perfC2 := Gauss(skillC,15);
    observe(perfB2 > perfC2);

    // third game:A vs C, A won
    perfA3 := Gauss(skillA,15);
    perfC3 := Gauss(skillC,15);
    observe(perfA3 > perfC3);

    return (skillA,skillB,skillC); // expected: (-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillC·ξ₁·⅟15))·e^(skillB²·⅟30)·⅟20·√3̅0̅+3·e^(skillB²·⅟30+skillC²·⅟30)·π·⅟2)·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillC·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·[(∫dξ₁(∫dξ₂(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₂·⅟√3̅0̅)·(∫dξ₃(-(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₃·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^(-ξ₄²·⅟30+ξ₁·ξ₄·⅟15))·e^(ξ₃²·⅟30)·⅟20·√3̅0̅+3·e^(ξ₁²·⅟30+ξ₃²·⅟30)·π·⅟2)·(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₃·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^(-ξ₄²·⅟42+20·ξ₄·⅟7+2·ξ₂·ξ₄·⅟105))·e^(-ξ₃²·⅟12+10·ξ₃))·e^(-ξ₂²·⅟42+20·ξ₂·⅟7))·e^(-ξ₁²·⅟12+10·ξ₁))·⅟e^(9000·⅟7)·⅟π⁴·⅟√1̅8̅9̅0̅0̅0̅0̅≠0]·e^(-1500·⅟7+-7·skillA²·⅟60+-skillB²·⅟12+-skillC²·⅟12+10·skillA+10·skillB+10·skillC)·⅟(∫dξ₁(∫dξ₂(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₂·⅟√3̅0̅)·(∫dξ₃(-(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₃·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^(-ξ₄²·⅟30+ξ₁·ξ₄·⅟15))·e^(ξ₃²·⅟30)·⅟20·√3̅0̅+3·e^(ξ₁²·⅟30+ξ₃²·⅟30)·π·⅟2)·(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₃·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^(-ξ₄²·⅟42+20·ξ₄·⅟7+2·ξ₂·ξ₄·⅟105))·e^(-ξ₃²·⅟12+10·ξ₃))·e^(-ξ₂²·⅟42+20·ξ₂·⅟7))·e^(-ξ₁²·⅟12+10·ξ₁))·⅟√6̅0̅·⅟√π̅·√7̅
}
