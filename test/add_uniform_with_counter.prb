def main(){
    x := 0;
    y := 0;
    repeat 2{
        cur := Uniform(0,1);
        x = x + cur;
	if cur<1/2 { y+=1; }
    }
    //z:=x==y;
    observe(y==1);
    return (x); // expected: (((-⅟2+x)·([-1+2·x≠0]·[-1+2·x≤0]+[-1+x≤0]·[-2·x+1≤0])+[-1+x≠0]·[-2·x+1≤0]·[-x+1≤0]·⅟2)·([-1+2·x≠0]·[-1+2·x≤0]+[-1+x≠0]·[-2·x+1≤0]·[-x+1≤0]+[-1+x≤0]·[-2·x+1≤0]·[-3+2·x≤0])·([-1+2·x≠0]·[-1+2·x≤0]·[-2·x+3≠0]+[-1+x≠0]·[-2·x+1≤0]·[-x+1≤0]+[-1+x≤0]·[-2·x+1≤0]·[-2·x+3≠0])+(-x+1)·[-x+1≤0]+[-1+x≤0]·[-2·x+3≤0])·(2·[-1+2·x≠0]·[-1+2·x≤0]·[-2·x+3≠0]·[-x+1≤0]+2·[-1+x≠0]·[-1+x≤0]·[-2·x+1≤0]·[-2·x+3≠0]·[-3+2·x≤0]+2·[-1+x≠0]·[-1+x≤0]·[-2·x+3≠0]·[-2·x+3≤0]+2·[-2·x+1≤0]·[-3+2·x≤0]·[-x+1≤0])+((-x+⅟2)·[-1+x≠0]·[-2·x+1≤0]·[-x+1≤0]+-[-1+2·x≠0]·[-1+2·x≤0]·⅟2+-[-1+x≤0]·[-2·x+1≤0]·⅟2+[-1+x≠0]·[-1+x≤0]·x+[-x+1≤0])·(2·[-1+2·x≠0]·[-1+2·x≤0]·[-x+1≤0]+2·[-1+x≠0]·[-2·x+1≤0]·[-3+2·x≤0]·[-x+1≤0]+2·[-1+x≤0]·[-2·x+1≤0])
}
